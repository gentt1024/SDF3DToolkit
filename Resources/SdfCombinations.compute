// ref: https://iquilezles.org/articles/distfunctions/
#pragma kernel opUnion
#pragma kernel opSubtraction
#pragma kernel opIntersection
#pragma kernel opXor
#pragma kernel opSmoothUnion

RWTexture3D<float> result;
Texture3D<float> sdf1;
Texture3D<float> sdf2;

[numthreads(8, 8, 8)]
void opUnion (uint3 id : SV_DispatchThreadID)
{
    float d1 = sdf1[id];
    float d2 = sdf2[id];
    
    result[id] = min(d1, d2);
}

[numthreads(8, 8, 8)]
void opSubtraction (uint3 id : SV_DispatchThreadID)
{
    float d1 = sdf1[id];
    float d2 = sdf2[id];
    
    result[id] = max(-d1, d2);
}

[numthreads(8, 8, 8)]
void opIntersection (uint3 id : SV_DispatchThreadID)
{
    float d1 = sdf1[id];
    float d2 = sdf2[id];
    
    result[id] = max(d1, d2);
}

[numthreads(8, 8, 8)]
void opXor (uint3 id : SV_DispatchThreadID)
{
    float d1 = sdf1[id];
    float d2 = sdf2[id];
    
    result[id] = max(min(d1, d2), -max(d1, d2));
}

[numthreads(8, 8, 8)]
void opSmoothUnion (uint3 id : SV_DispatchThreadID)
{
    float d1 = sdf1[id];
    float d2 = sdf2[id];
    
    float h = clamp(0.5 + 0.5 * (d2 - d1) / 0.1, 0.0, 1.0);
    
    result[id] = lerp(d2, d1, h) - 0.1 * h * (1.0 - h);
}

